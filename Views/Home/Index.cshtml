 <style>
      video {
        width: 100%;
        height: auto;
        border: 2px solid rgb(83, 83, 237);
        border-radius: 20px;
      }

      .carousel {
        display: flex;
        overflow-x: auto;
        scroll-snap-type: x mandatory;
        scroll-behavior: smooth;
        -webkit-overflow-scrolling: touch;
        width: 100%;
        height: 170px;
        border: 2px solid rgb(83, 83, 237);
        border-radius: 20px;

      }

      .carousel img {
        width: 170px;
        height: auto;
        margin: 5px;
        scroll-snap-align: center;
      }
      /* Style the modal */
.modal {
  position: fixed;
  z-index: 9999;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  @* background-color: rgba(88, 95, 187, 0.463); *@
  display: flex;
  justify-content: center;
  align-items: center;
  

}

/* Style the image inside the modal */
.modal img {
  max-width: 100%;
  max-height: 100%;
  cursor: pointer;
  transition: transform 0.2s;
  border: 1px solid blue;
  border-radius: 10px;
}

/* Style the zoomed image */
.modal img.zoom {
  transform: scale(2);
}

    </style>
 

<script src="~/js/Chart.min.js"></script>
<script src="~/js/jquery-3.6.0.min.js"></script>
<script src="~/js/signalr.min.js"></script>

<div style="max-height: 1024px;overflow-y: scroll;padding: 5px;">


<div class="row p-3" >

  <div class="col-6 text-center">

    <p class="text-center alert alert-success" id="puls">--</p>

  </div>

  <div class="col-6 text-center">

    <p class="text-center alert alert-warning" id="so">--</p>

  </div>

</div>

<canvas id="serial-port-data-chart" style="margin-top:5px"></canvas>

<div class="text-center">
  <button id="startBtn" class="btn btn-success">Start Connection</button>
  <button id="stopBtn" class="btn btn-danger">Stop Connection</button>

</div>





  @* video *@


    <video id="video" autoplay></video>
    <button id="start" class="btn btn-success" style="width: 150px;">Start</button>
    <button id="stop" class="btn btn-danger" style="width: 150px;">Stop</button>
    <button id="capture" class="btn btn-warning" style="width: 150px;">Capture</button>
    
<br>

    <canvas id="canvas" style="display: none;"></canvas>
    <div class="carousel"></div>

    


    @* video *@

</div>





<script>
var ctx = document.getElementById("serial-port-data-chart").getContext("2d");
var dataPointLimit =150; // number of data points to display on the chart

var chart = new Chart(ctx, {
  type: "line",
  data: {
    labels: [],
    datasets: [{
      label: "Serial Port Data Read and write",
      data: [],
      borderColor: "rgba(75, 192, 192, 1)",
      backgroundColor: "rgba(75, 192, 192, 0.2)"
    }]
  },
  options: {
    scales: {
      yAxes: [{
        ticks: {
          beginAtZero: true
        }
      }]
    }
  }
});




@* chart1******************************************************************************************* *@

var connection = new signalR.HubConnectionBuilder().withUrl("/dataHub").build();

connection.on("ReceiveData", function (data,data1,data2) {
  if (data.trim() !== "") {
    var parsedData = parseFloat(data);
    
    document.getElementById('puls').innerText=(data1);
     document.getElementById('so').innerText=(data2);

    chart.data.labels.push("");
    chart.data.datasets[0].data.push(parsedData);

    // Check if the number of data points is greater than the limit
    if (chart.data.datasets[0].data.length > dataPointLimit) {
      chart.data.labels.shift();
      chart.data.datasets[0].data.shift();
    }

    chart.update();
  }
});

document.getElementById("startBtn").addEventListener("click", function () {
  connection.start().then(function () {
    $.post("/Home/StartReading");
  });
});

document.getElementById("stopBtn").addEventListener("click", function () {
  connection.stop().then(function () {});
});


</script>
 <script>
      const video = document.getElementById('video');
      const canvas = document.getElementById('canvas');
      const startButton = document.getElementById('start');
      const stopButton = document.getElementById('stop');
      const captureButton = document.getElementById('capture');
      const carousel = document.querySelector('.carousel');
      let stream;

      startButton.addEventListener('click', () => {
        navigator.mediaDevices.getUserMedia({ video: true })
          .then((videoStream) => {
            stream = videoStream;
            video.srcObject = stream;
          })
          .catch((err) => {
            console.error(err);
          });
      });

      stopButton.addEventListener('click', () => {
        stream.getTracks().forEach(track => track.stop());
        video.srcObject = null;
      });

      captureButton.addEventListener('click', () => {
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
        canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
        const imgData = canvas.toDataURL();
        const img = new Image();
        //add atribut onclick="openModal(this)" to img
        img.setAttribute("onclick", "openModal(this)");
        img.src = imgData;
        carousel.appendChild(img);
      });
    </script>
    <script>
      function openModal(img) {
  // Create a modal element
  var modal = document.createElement('div');
  modal.className = 'modal';
  document.body.appendChild(modal);

  // Create an image element inside the modal
  var modalImg = document.createElement('img');
  modalImg.src = img.src;
  modal.appendChild(modalImg);

  // Add zoom functionality to the image
  modalImg.onclick = function() {
    modalImg.classList.toggle('zoom');
  }

  // Close the modal when the user clicks outside of it
  modal.onclick = function() {
    modal.remove();
  }
}

    </script>
 